{"version":3,"file":"bootstrap-dialog.js","sources":["../../src/js/dialog.js"],"sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap Dialog (v0.0.1): dialog.js\n * Licensed under MIT (https://github.com/iqbalfn/bootstrap-dialog/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport $ from 'jquery'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NAME               = 'dialog'\nconst VERSION            = '0.0.1'\n\nconst Default = {\n    button: {\n        type    : 'light',\n        label   : 'Cancel',\n        dismiss : false,\n        focus   : false\n    }\n}\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\n\nclass Dialog {\n\n    constructor(options){\n        this._confirmed = false\n        this._options   = options\n        this._makeModal()\n        this._showModal()\n    }\n\n    // Getters\n\n    static get VERSION() {\n        return VERSION\n    }\n\n    static get Default() {\n        return Default\n    }\n\n    // Private\n\n    _btnOptions(btn){\n        let btns = Default.button\n\n        for(let k in btns){\n            if(typeof btn[k] === 'undefined')\n                btn[k] = btns[k]\n        }\n\n        return btn\n    }\n\n    _getInputValue(){\n        if(!this._options.input)\n            return\n\n        return $(this._input).val()\n    }\n\n    _makeInput(){\n        let tmpl  = '';\n        let input = this._options.input\n\n        switch(input.type){\n            case 'textarea':\n                tmpl = `<textarea class=\"form-control bs-dialog-input\" id=\"bs-dialog-input\" rows=\"3\" placeholder=\"${input.label}\"></textarea>`\n            break;\n            \n            case 'select':\n                let opts = ''\n                for(let k in input)\n                    opts+= `<option value=\"${k}\">${input[k]}</option>`\n                tmpl = `<select class=\"custom-select my-1 mr-sm-2\" id=\"bs-dialog-input\">${opts}</select>`\n            break;\n\n            default:\n                tmpl = `<input type=\"${input.type}\" class=\"form-control bs-dialog-input\" id=\"bs-dialog-input\" placeholder=\"${input.label}\">`\n        }\n\n        let tx = `\n            <div class=\"form-group\">\n                <label for=\"bs-dialog-input\">${input.label}</label>\n            </div>`\n\n        this._input = $(tmpl).get(0)\n\n        return $(tx).append(this._input)\n    }\n\n    _makeModal(){\n        // headers\n        let header = ''\n        if(this._options.title){\n            header = `\n                <div class=\"modal-header\">\n                    <h5 class=\"modal-title\">${this._options.title}</h5>\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                        <span aria-hidden=\"true\">&times;</span>\n                    </button>\n                </div>`\n        }\n\n        // message\n        let message = ''\n        if(this._options.message)\n            message = `<p>${this._options.message}</p>`\n\n        // footer buttons\n        let buttons = ''\n        this._options.buttons.forEach(btn => {\n            btn = this._btnOptions(btn)\n\n            let action = btn.dismiss ? ' data-dismiss=\"modal\"' : ' data-confirm=\"true\"'\n            let focus  = btn.focus ? ' btn-focus-first' : ''\n            buttons+= `<button type=\"button\" class=\"btn btn-${btn.type}${focus}\"${action}>${btn.label}</button>`\n        })\n\n        let tmpl = `\n            <div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\">\n                <div class=\"modal-dialog\" role=\"document\">\n                    <div class=\"modal-content\">\n                        ${header}\n                        <div class=\"modal-body\">\n                            ${message}\n                        </div>\n                        <div class=\"modal-footer\">\n                            ${buttons}\n                        </div>\n                    </div>\n                </div>\n            </div>`\n\n        this._modal = $(tmpl).appendTo(document.body)\n\n        if(this._options.input){\n            let form = this._makeInput()\n            $(this._modal).find('.modal-body').append(form)\n        }\n\n        $(this._modal).on('click', '[data-confirm]', event => {\n            this._confirmed = true\n            $(this._modal).modal('hide')\n        })\n\n        $(this._modal).on('hidden.bs.modal', event => {\n            setTimeout(e => $(this._modal).remove(), 1000)\n\n            if(!this._options.callback)\n                return\n\n            let arg = this._confirmed\n            if(this._confirmed && this._options.input)\n                arg = this._getInputValue()\n\n            this._options.callback.call(this, arg)\n        })\n\n        $(this._modal).on('shown.bs.modal', event => {\n            if(this._input)\n                $(this._input).focus()\n            else\n                $(this._modal).find('.btn-focus-first').focus()\n        })\n    }\n\n    _showModal(){\n        $(this._modal).modal('show')\n    }\n\n    // Static\n\n    static alert(title, message, callback){\n        new Dialog({\n            title,\n            message,\n            callback,\n            input: null,\n            buttons: [\n                {\n                    type: 'primary',\n                    focus: true,\n                    label: 'Ok'\n                }\n            ]\n        })\n    }\n    \n    static confirm(title, message, callback){\n        new Dialog({\n            title,\n            message,\n            callback,\n            input: null,\n            buttons: [\n                {\n                    type: 'light',\n                    label: 'Cancel',\n                    dismiss: true\n                },\n                {\n                    type: 'primary',\n                    focus: true,\n                    label: 'Ok'\n                }\n            ]\n        })\n    }\n\n    static prompt(title, message, input, callback){\n        new Dialog({\n            title,\n            message,\n            callback,\n            input,\n            buttons: [\n                {\n                    type: 'light',\n                    label: 'Cancel',\n                    dismiss: true\n                },\n                {\n                    type: 'primary',\n                    focus: true,\n                    label: 'Ok'\n                }\n            ]\n        })\n    }\n}\n\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n */\n\n$[NAME] = Dialog\n\nexport default Dialog"],"names":["NAME","VERSION","Default","button","type","label","dismiss","focus","Dialog","options","_confirmed","_options","_makeModal","_showModal","_btnOptions","btn","btns","k","_getInputValue","input","$","_input","val","_makeInput","tmpl","opts","tx","get","append","header","title","message","buttons","forEach","action","_modal","appendTo","document","body","form","find","on","event","modal","setTimeout","e","remove","callback","arg","call","alert","confirm","prompt"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;EASA;;;;;;EAMA,IAAMA,IAAI,GAAiB,QAA3B;EACA,IAAMC,OAAO,GAAc,OAA3B;EAEA,IAAMC,OAAO,GAAG;EACZC,EAAAA,MAAM,EAAE;EACJC,IAAAA,IAAI,EAAM,OADN;EAEJC,IAAAA,KAAK,EAAK,QAFN;EAGJC,IAAAA,OAAO,EAAG,KAHN;EAIJC,IAAAA,KAAK,EAAK;EAJN;EAQZ;;;;;;EATgB,CAAhB;;MAeMC;;;EAEF,kBAAYC,OAAZ,EAAoB;EAChB,SAAKC,UAAL,GAAkB,KAAlB;EACA,SAAKC,QAAL,GAAkBF,OAAlB;;EACA,SAAKG,UAAL;;EACA,SAAKC,UAAL;EACH;;;;;EAYD;WAEAC,cAAA,qBAAYC,GAAZ,EAAgB;EACZ,QAAIC,IAAI,GAAGd,OAAO,CAACC,MAAnB;;EAEA,SAAI,IAAIc,CAAR,IAAaD,IAAb,EAAkB;EACd,UAAG,OAAOD,GAAG,CAACE,CAAD,CAAV,KAAkB,WAArB,EACIF,GAAG,CAACE,CAAD,CAAH,GAASD,IAAI,CAACC,CAAD,CAAb;EACP;;EAED,WAAOF,GAAP;EACH;;WAEDG,iBAAA,0BAAgB;EACZ,QAAG,CAAC,KAAKP,QAAL,CAAcQ,KAAlB,EACI;EAEJ,WAAOC,CAAC,CAAC,KAAKC,MAAN,CAAD,CAAeC,GAAf,EAAP;EACH;;WAEDC,aAAA,sBAAY;EACR,QAAIC,IAAI,GAAI,EAAZ;EACA,QAAIL,KAAK,GAAG,KAAKR,QAAL,CAAcQ,KAA1B;;EAEA,YAAOA,KAAK,CAACf,IAAb;EACI,WAAK,UAAL;EACIoB,QAAAA,IAAI,yGAAgGL,KAAK,CAACd,KAAtG,mBAAJ;EACJ;;EAEA,WAAK,QAAL;EACI,YAAIoB,IAAI,GAAG,EAAX;;EACA,aAAI,IAAIR,CAAR,IAAaE,KAAb;EACIM,UAAAA,IAAI,yBAAqBR,CAArB,WAA2BE,KAAK,CAACF,CAAD,CAAhC,cAAJ;EADJ;;EAEAO,QAAAA,IAAI,4EAAsEC,IAAtE,cAAJ;EACJ;;EAEA;EACID,QAAAA,IAAI,sBAAmBL,KAAK,CAACf,IAAzB,uFAAyGe,KAAK,CAACd,KAA/G,QAAJ;EAbR;;EAgBA,QAAIqB,EAAE,iGAEiCP,KAAK,CAACd,KAFvC,iCAAN;EAKA,SAAKgB,MAAL,GAAcD,CAAC,CAACI,IAAD,CAAD,CAAQG,GAAR,CAAY,CAAZ,CAAd;EAEA,WAAOP,CAAC,CAACM,EAAD,CAAD,CAAME,MAAN,CAAa,KAAKP,MAAlB,CAAP;EACH;;WAEDT,aAAA,sBAAY;EAAA;;EACR;EACA,QAAIiB,MAAM,GAAG,EAAb;;EACA,QAAG,KAAKlB,QAAL,CAAcmB,KAAjB,EAAuB;EACnBD,MAAAA,MAAM,sGAE4B,KAAKlB,QAAL,CAAcmB,KAF1C,8OAAN;EAOH,KAXO;;;EAcR,QAAIC,OAAO,GAAG,EAAd;EACA,QAAG,KAAKpB,QAAL,CAAcoB,OAAjB,EACIA,OAAO,WAAS,KAAKpB,QAAL,CAAcoB,OAAvB,SAAP,CAhBI;;EAmBR,QAAIC,OAAO,GAAG,EAAd;;EACA,SAAKrB,QAAL,CAAcqB,OAAd,CAAsBC,OAAtB,CAA8B,UAAAlB,GAAG,EAAI;EACjCA,MAAAA,GAAG,GAAG,KAAI,CAACD,WAAL,CAAiBC,GAAjB,CAAN;EAEA,UAAImB,MAAM,GAAGnB,GAAG,CAACT,OAAJ,GAAc,uBAAd,GAAwC,sBAArD;EACA,UAAIC,KAAK,GAAIQ,GAAG,CAACR,KAAJ,GAAY,kBAAZ,GAAiC,EAA9C;EACAyB,MAAAA,OAAO,iDAA2CjB,GAAG,CAACX,IAA/C,GAAsDG,KAAtD,UAA+D2B,MAA/D,SAAyEnB,GAAG,CAACV,KAA7E,cAAP;EACH,KAND;;EAQA,QAAImB,IAAI,6NAIUK,MAJV,0FAMcE,OANd,4HAScC,OATd,6GAAR;EAeA,SAAKG,MAAL,GAAcf,CAAC,CAACI,IAAD,CAAD,CAAQY,QAAR,CAAiBC,QAAQ,CAACC,IAA1B,CAAd;;EAEA,QAAG,KAAK3B,QAAL,CAAcQ,KAAjB,EAAuB;EACnB,UAAIoB,IAAI,GAAG,KAAKhB,UAAL,EAAX;;EACAH,MAAAA,CAAC,CAAC,KAAKe,MAAN,CAAD,CAAeK,IAAf,CAAoB,aAApB,EAAmCZ,MAAnC,CAA0CW,IAA1C;EACH;;EAEDnB,IAAAA,CAAC,CAAC,KAAKe,MAAN,CAAD,CAAeM,EAAf,CAAkB,OAAlB,EAA2B,gBAA3B,EAA6C,UAAAC,KAAK,EAAI;EAClD,MAAA,KAAI,CAAChC,UAAL,GAAkB,IAAlB;EACAU,MAAAA,CAAC,CAAC,KAAI,CAACe,MAAN,CAAD,CAAeQ,KAAf,CAAqB,MAArB;EACH,KAHD;EAKAvB,IAAAA,CAAC,CAAC,KAAKe,MAAN,CAAD,CAAeM,EAAf,CAAkB,iBAAlB,EAAqC,UAAAC,KAAK,EAAI;EAC1CE,MAAAA,UAAU,CAAC,UAAAC,CAAC;EAAA,eAAIzB,CAAC,CAAC,KAAI,CAACe,MAAN,CAAD,CAAeW,MAAf,EAAJ;EAAA,OAAF,EAA+B,IAA/B,CAAV;EAEA,UAAG,CAAC,KAAI,CAACnC,QAAL,CAAcoC,QAAlB,EACI;EAEJ,UAAIC,GAAG,GAAG,KAAI,CAACtC,UAAf;EACA,UAAG,KAAI,CAACA,UAAL,IAAmB,KAAI,CAACC,QAAL,CAAcQ,KAApC,EACI6B,GAAG,GAAG,KAAI,CAAC9B,cAAL,EAAN;;EAEJ,MAAA,KAAI,CAACP,QAAL,CAAcoC,QAAd,CAAuBE,IAAvB,CAA4B,KAA5B,EAAkCD,GAAlC;EACH,KAXD;EAaA5B,IAAAA,CAAC,CAAC,KAAKe,MAAN,CAAD,CAAeM,EAAf,CAAkB,gBAAlB,EAAoC,UAAAC,KAAK,EAAI;EACzC,UAAG,KAAI,CAACrB,MAAR,EACID,CAAC,CAAC,KAAI,CAACC,MAAN,CAAD,CAAed,KAAf,GADJ,KAGIa,CAAC,CAAC,KAAI,CAACe,MAAN,CAAD,CAAeK,IAAf,CAAoB,kBAApB,EAAwCjC,KAAxC;EACP,KALD;EAMH;;WAEDM,aAAA,sBAAY;EACRO,IAAAA,CAAC,CAAC,KAAKe,MAAN,CAAD,CAAeQ,KAAf,CAAqB,MAArB;EACH;;;WAIMO,QAAP,eAAapB,KAAb,EAAoBC,OAApB,EAA6BgB,QAA7B,EAAsC;EAClC,QAAIvC,MAAJ,CAAW;EACPsB,MAAAA,KAAK,EAALA,KADO;EAEPC,MAAAA,OAAO,EAAPA,OAFO;EAGPgB,MAAAA,QAAQ,EAARA,QAHO;EAIP5B,MAAAA,KAAK,EAAE,IAJA;EAKPa,MAAAA,OAAO,EAAE,CACL;EACI5B,QAAAA,IAAI,EAAE,SADV;EAEIG,QAAAA,KAAK,EAAE,IAFX;EAGIF,QAAAA,KAAK,EAAE;EAHX,OADK;EALF,KAAX;EAaH;;WAEM8C,UAAP,iBAAerB,KAAf,EAAsBC,OAAtB,EAA+BgB,QAA/B,EAAwC;EACpC,QAAIvC,MAAJ,CAAW;EACPsB,MAAAA,KAAK,EAALA,KADO;EAEPC,MAAAA,OAAO,EAAPA,OAFO;EAGPgB,MAAAA,QAAQ,EAARA,QAHO;EAIP5B,MAAAA,KAAK,EAAE,IAJA;EAKPa,MAAAA,OAAO,EAAE,CACL;EACI5B,QAAAA,IAAI,EAAE,OADV;EAEIC,QAAAA,KAAK,EAAE,QAFX;EAGIC,QAAAA,OAAO,EAAE;EAHb,OADK,EAML;EACIF,QAAAA,IAAI,EAAE,SADV;EAEIG,QAAAA,KAAK,EAAE,IAFX;EAGIF,QAAAA,KAAK,EAAE;EAHX,OANK;EALF,KAAX;EAkBH;;WAEM+C,SAAP,gBAActB,KAAd,EAAqBC,OAArB,EAA8BZ,KAA9B,EAAqC4B,QAArC,EAA8C;EAC1C,QAAIvC,MAAJ,CAAW;EACPsB,MAAAA,KAAK,EAALA,KADO;EAEPC,MAAAA,OAAO,EAAPA,OAFO;EAGPgB,MAAAA,QAAQ,EAARA,QAHO;EAIP5B,MAAAA,KAAK,EAALA,KAJO;EAKPa,MAAAA,OAAO,EAAE,CACL;EACI5B,QAAAA,IAAI,EAAE,OADV;EAEIC,QAAAA,KAAK,EAAE,QAFX;EAGIC,QAAAA,OAAO,EAAE;EAHb,OADK,EAML;EACIF,QAAAA,IAAI,EAAE,SADV;EAEIG,QAAAA,KAAK,EAAE,IAFX;EAGIF,QAAAA,KAAK,EAAE;EAHX,OANK;EALF,KAAX;EAkBH;;;;0BApMoB;EACjB,aAAOJ,OAAP;EACH;;;0BAEoB;EACjB,aAAOC,OAAP;EACH;;;;;EAiML;;;;;;;EAMAkB,CAAC,CAACpB,IAAD,CAAD,GAAUQ,MAAV;;;;;;;;;;;;"}